{"ast":null,"code":"var _jsxFileName = \"/home/obakeng/Desktop/memory-game/src/components/regions/Cards/presentation.js\";\nimport React, { useState } from \"react\";\n\nconst Game = props => {\n  const Board = props => {\n    return React.createElement(\"button\", {\n      className: \"cardBlock\",\n      onClick: props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, props.imageone);\n  };\n\n  const [game, setGame] = useState({\n    cards: [\"k\", \"j\", \"q\", \"a\"],\n    cardOneisNext: true,\n    stepNumber: 0,\n    history: [{\n      cards: Array(9).fill(null)\n    }]\n  });\n\n  const flipCard = i => {\n    const history = game.history.slice(0, game.stepNumber + 1);\n    const current = history[history.length - 1];\n    const cards = current.cards.slice();\n    cards[i] = game.cardOneisNext ? \"\" : \"JACK\";\n    setGame({\n      history: history.concat({\n        cards: cards\n      }),\n      cardOneisNext: !game.cardOneisNext,\n      stepNumber: history.length\n    });\n  };\n\n  const history = game.history;\n  const current = history[game.stepNumber];\n  return React.createElement(\"div\", {\n    className: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"game-board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Board, {\n    onClick: i => flipCard(i),\n    cards: current.cards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n};\n\nexport default Game;","map":{"version":3,"sources":["/home/obakeng/Desktop/memory-game/src/components/regions/Cards/presentation.js"],"names":["React","useState","Game","props","Board","onClick","imageone","game","setGame","cards","cardOneisNext","stepNumber","history","Array","fill","flipCard","i","slice","current","length","concat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAMC,KAAK,GAAGD,KAAK,IAAI;AACrB,WACE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEA,KAAK,CAACE,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAACG,QADT,CADF;AAKD,GAND;;AAQA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAC/BQ,IAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADwB;AAE/BC,IAAAA,aAAa,EAAE,IAFgB;AAG/BC,IAAAA,UAAU,EAAE,CAHmB;AAI/BC,IAAAA,OAAO,EAAE,CAAC;AAAEH,MAAAA,KAAK,EAAEI,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AAAT,KAAD;AAJsB,GAAD,CAAhC;;AAOA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB,UAAMJ,OAAO,GAAGL,IAAI,CAACK,OAAL,CAAaK,KAAb,CAAmB,CAAnB,EAAsBV,IAAI,CAACI,UAAL,GAAkB,CAAxC,CAAhB;AACA,UAAMO,OAAO,GAAGN,OAAO,CAACA,OAAO,CAACO,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMV,KAAK,GAAGS,OAAO,CAACT,KAAR,CAAcQ,KAAd,EAAd;AACAR,IAAAA,KAAK,CAACO,CAAD,CAAL,GAAWT,IAAI,CAACG,aAAL,GAAqB,EAArB,GAA0B,MAArC;AACAF,IAAAA,OAAO,CAAC;AACNI,MAAAA,OAAO,EAAEA,OAAO,CAACQ,MAAR,CAAe;AACtBX,QAAAA,KAAK,EAAEA;AADe,OAAf,CADH;AAINC,MAAAA,aAAa,EAAE,CAACH,IAAI,CAACG,aAJf;AAKNC,MAAAA,UAAU,EAAEC,OAAO,CAACO;AALd,KAAD,CAAP;AAOD,GAZD;;AAcA,QAAMP,OAAO,GAAGL,IAAI,CAACK,OAArB;AAEA,QAAMM,OAAO,GAAGN,OAAO,CAACL,IAAI,CAACI,UAAN,CAAvB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEK,CAAC,IAAID,QAAQ,CAACC,CAAD,CAA7B;AAAkC,IAAA,KAAK,EAAEE,OAAO,CAACT,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CAzCD;;AA2CA,eAAeP,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Game = props => {\n  const Board = props => {\n    return (\n      <button className=\"cardBlock\" onClick={props.onClick}>\n        {props.imageone}\n      </button>\n    );\n  };\n\n  const [game, setGame] = useState({\n    cards: [\"k\", \"j\", \"q\", \"a\"],\n    cardOneisNext: true,\n    stepNumber: 0,\n    history: [{ cards: Array(9).fill(null) }]\n  });\n\n  const flipCard = i => {\n    const history = game.history.slice(0, game.stepNumber + 1);\n    const current = history[history.length - 1];\n    const cards = current.cards.slice();\n    cards[i] = game.cardOneisNext ? \"\" : \"JACK\";\n    setGame({\n      history: history.concat({\n        cards: cards\n      }),\n      cardOneisNext: !game.cardOneisNext,\n      stepNumber: history.length\n    });\n  };\n\n  const history = game.history;\n\n  const current = history[game.stepNumber];\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board onClick={i => flipCard(i)} cards={current.cards} />\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}